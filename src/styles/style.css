@import url("./fonts.css");

/* ----------------------------- */
/* 1) DESIGN TOKENS (Variáveis)  */
/* ----------------------------- */
:root {
  /* -- PALETA DE CORES -- */
  /* Primary Red */
  --primary-red: #F5163C;
  --primary-red-dark: #B8112D;
  --primary-red-darker: #560815;

  /* Primary Yellow */
  --primary-yellow: #F4A70B;
  --primary-yellow-dark: #B77D08;
  --primary-yellow-darker: #553A04;

  /* Primary Blue */
  --primary-blue: #1654DF;
  --primary-blue-dark: #113FA7;
  --primary-blue-darker: #081D4E;

  /* Neutrals */
  --neutral-light: #EBEBEB;
  --neutral-normal: #373737;
  --neutral-dark: #292929;
  --neutral-darker: #131313;

  /* -- ESPAÇAMENTOS -- */
  /* Para padding e/ou margin, conforme necessário */
  --space-8: 8px;
  --space-16: 16px;
  --space-24: 24px;
  --space-32: 32px;
  --space-64: 64px;
  --space-128: 128px;
}

/* Ajusta o box-sizing para todos os elementos e pseudo-elementos */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* ----------------------------- */
/* 2) RESET / BASE               */
/* ----------------------------- 
html {
  scroll-behavior: smooth;
}
*/

/* Zera margens e prepara body para ocupar 100% da tela */
html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  /* height: 100%; */
  /* overflow: hidden; */
}

/* O #root vai receber o canvas da cena 3D via React */
#root {
  /* position: absolute; */
  top: 0;
  left: 0;
  width: 100%;
  /* height: 100%; */
}

/* Força o <canvas> a ocupar todo o espaço dentro do #root */
canvas {
  display: block;
}

/* ----------------------------- */
/* 3) ESTILOS GERAIS             */
/* ----------------------------- */
body {
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  /* Substituímos #fff pela variável neutra clara */
  color: var(--neutral-light);
}

/* Cada section ocupa a tela inteira (100vh),
   mas se quiser seções menores, basta alterar. */
section {
  width: 100%;
  height: 100vh;
  display: flex;
  position: relative;
  /* Substituímos #333 pela variável neutra escura */
  background: var(--neutral-dark);
}

/* ----------------------------- */
/* 4) HEADINGS/TEXT              */
/* ----------------------------- */
.heading-large {
  /* Substituímos #FFFFFF por uma variável
     (poderia ser var(--neutral-light) ou cor primária). */
  color: var(--neutral-light);
  font-family: 'Neue Haas Grotesk Display Pro', sans-serif;
  font-weight: 900;
  font-size: 110px;
  line-height: 0.5;
  letter-spacing: -3px;
  margin: 0;
  z-index: 1;

  /* Exemplo de espaçamento adicional na parte de baixo */
  margin-bottom: var(--space-32);
}

.heading-medium {
  color: var(--primary-yellow);
  font-family: 'Neue Haas Grotesk Display Pro', sans-serif;
  font-weight: 900;
  font-size: 40px;
  line-height: normal;
  letter-spacing: 0px;
  margin: 0;
  z-index: 1;

  margin-bottom: var(--space-16);
}

.heading-small {
  color: var(--neutral-light);
  font-family: 'Neue Haas Grotesk Display Pro', sans-serif;
  font-weight: 100;
  font-size: 20px;
  line-height: 2.5;
  letter-spacing: 0px;
  margin: 0;
  padding-left: 5px;
  z-index: 1;
}

/* ----------------------------- */
/* 5) LAYOUT AUXILIAR            */
/* ----------------------------- */
.text-row {
  display: flex;
  justify-content: flex-start;  /* Alinha pela esquerda */
  align-items: left;            /* Alinha os textos pela linha de base */
  /* ou align-items: center; se preferir centralizar verticalmente */

  /* Exemplo: espaço horizontal entre itens da linha */
  gap: var(--space-24);
}

.text-column {
  display: flex;
  flex-direction: column;       /* Empilha itens na vertical */
  align-items: flex-start;      /* Alinha pela esquerda */
}

/* ----------------------------- */
/* 6) Classes utilitárias        */
/* ----------------------------- */
.flex-left {
  justify-content: flex-start;
  align-items: center; 
}

.flex-center {
  justify-content: center;
  align-items: center;
}

.flex-right {
  justify-content: flex-end;
  align-items: center;
}

